(this.webpackJsonp=this.webpackJsonp||[]).push([[46],{AYQT:function(t,e,s){"use strict";s.r(e),s.d(e,"IDBDatabaseImpl",(function(){return I}));var r=s("8s2m"),i=s("VTBJ"),n=s("wH4e"),a=s("jDHv"),o=s("Mgpg"),c=s("ycTR"),h=s("h0S/"),d=s("dko3");const l=function(){const t=new Map;return function(e,s,r){const i=`${s}_${r}`;if(t.has(i))return t.get(i);const a=Object(c.a)(s,n.AdapterType.IDB),o=(null==a?void 0:a.partitionsMap.default.tables.filter((t=>t.tableName===r))[0]).getTransformConfigs(n.AdapterType.IDB);return o.forEach((t=>{t.init(e)})),t.set(i,o),o}}();class u{constructor(t,e){this.dbName=t,this.dbIdentity=e,this.db=void 0,this.logger=void 0,this.db=null,this.dbName=t;const s=a.ModuleContainer.resolve(o.ZLoggerFactory);this.logger=s.createZLogger(h.ZLoggerNametags.liteIDB,[h.ZLoggerNametags.liteIDB])}acquireDB(){return new Promise((async(t,e)=>{if(this.db)return t(this.db);const s=d.a.open(this.dbName);s.onsuccess=()=>{this.db=s.result,t(this.db)},s.onerror=t=>{this.logger.zsymb(18,"VN4ud-","open db error",this.dbName,t),e(t)},s.onupgradeneeded=t=>{this.logger.zsymb(0,"KEDzJS","on db upgrade");const e=Object(c.a)(this.dbIdentity,n.AdapterType.IDB);null==e||e.partitionsMap.default.tables.map((e=>{let s={};if(e.isNonFieldlikeEntity)s={autoIncrement:!0};else{const t=e.primaryIndex;s={keyPath:Object(n.firstOrArray)(t.getRealFields()),autoIncrement:t.autoIncrement}}t.target.result.createObjectStore(e.tableName,s)}))}}))}writeTrans(t){return new Promise(((e,s)=>{this.acquireDB().then((r=>{const i=r.transaction([t],"readwrite");i.oncomplete=e,i.onerror=s,e(i)}))}))}async writeStore(t){return(await this.writeTrans(t)).objectStore(t)}}class b extends u{constructor(t,e,s){super(s,e),this.uin=t,this.transforms=void 0,this.transforms=[]}toDBTransform(t){if(Array.isArray(t)||(t=[t]),0===this.transforms.length)return t;return t.map((t=>{const e=Object(i.a)({},t);return this.transforms.forEach((t=>{t.toDB(e)})),e}))}add(t,e,s){return new Promise((r=>{try{const i=t.add(e);i.onsuccess=t=>{r(s)},i.onerror=t=>{var s,i;r(void 0),t.preventDefault(),t.stopPropagation(),0!==(null===(s=t.target)||void 0===s||null===(i=s.error)||void 0===i?void 0:i.code)&&this.logger.zsymb(18,"5mNhvP","import err: ",t,e)}}catch(i){this.logger.zsymb(18,"iDFdPD","add err",i,e),r(void 0)}}))}async import(t,e){this.transforms=l(this.uin,this.dbIdentity,t);const s=await this.writeStore(t),r=this.toDBTransform(e).reduce(((t,r,i)=>(t.push(this.add(s,r,e[i])),t)),[]);return Promise.all(r).then((t=>({success:t.filter((t=>!!t)),fail:[]})))}clear(){}}class m{constructor(){this.dbInstances=void 0,this.uin=void 0,this.uid=void 0,this.uin="",this.uid="",this.dbInstances=new Map}init(t,e){this.uid=t,this.uin=e}getDB(t,e){if(!this.dbInstances.has(e)){this.uin;const s=new b(this.uin,t,e);this.dbInstances.set(e,s)}return this.dbInstances.get(e)}getDBName(t){switch(t){case"Core":return"zdb_"+this.uid;case"Res":return"zres_"+this.uid;default:return""}}insert(t,e,s){const r=this.getDB(t,this.getDBName(t));return r?r.import(e,s).then((t=>t)):Promise.resolve({success:[],fail:[]})}}var g;let p=null;class f{constructor(t){this.databaseName=void 0,this.tableName=void 0;const e=t.split("/");if(2!==e.length)throw Error("Invalid table path");this.databaseName=e[0],this.tableName=e[1]}insertMulti(t,e=r.a.DefaultInsertOptions){return p.insert(this.databaseName,this.tableName,t)}}let I=Object(a.singleton)(r.b)(g=Reflect.metadata("design:type",Function)(g=Reflect.metadata("design:paramtypes",[])(g=class{constructor(){this.tableCache=void 0,this.sessionInfo=void 0,this.tableCache=new Map,this.sessionInfo=null}authenticate(t){this.sessionInfo=t,function(t){p=new m,p.init(t.userId,t.UIN)}(t)}close(){return Promise.resolve()}table(t){if(!this.sessionInfo)throw Error("acess table before init session: "+t);if(!this.tableCache.has(t)){const e=new f(t);this.tableCache.set(t,e)}return this.tableCache.get(t)}})||g)||g)||g}}]);
//# sourceMappingURL=../sourcemaps/lazy/46.8a88dd4474733345cbe8.js.map