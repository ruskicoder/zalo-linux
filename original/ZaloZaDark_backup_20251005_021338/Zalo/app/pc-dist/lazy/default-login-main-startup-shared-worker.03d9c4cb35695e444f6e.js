(this.webpackJsonp=this.webpackJsonp||[]).push([[7],{"2xv9":function(t,e,a){"use strict";a.d(e,"a",(function(){return r}));var s=a("wudS"),i=a("JTyQ");const r=()=>{const t=Object(s.e)(),e={shared:i.c};return t.forEach((t=>{e[t]=i.c})),e}},Brnv:function(t,e,a){"use strict";a.d(e,"b",(function(){return i})),a.d(e,"a",(function(){return r}));var s=a("jDHv");const i=Object(s.define)("database-state-storage"),r="database-config"},JTyQ:function(t,e,a){"use strict";a.d(e,"a",(function(){return i})),a.d(e,"b",(function(){return r})),a.d(e,"c",(function(){return n}));var s=a("YEoC");const i="adp-st",r=s.a.IDB,n=s.a.IDB;s.a.IDB,s.a.SQLite},NTiX:function(t,e,a){"use strict";var s=a("Brnv");a.d(e,"a",(function(){return s.a})),a.d(e,"b",(function(){return s.b}))},nUpV:function(t,e,a){"use strict";var s,i=a("jDHv"),r=a("75pU"),n=a.n(r),d=a("YEoC"),c=a("JTyQ"),o=a("d/or"),h=a("2xv9"),u=a("NTiX");let p=i.ModuleContainer.injectable()(s=function(t,e){return Object(i.inject)(u.b)(t,void 0,0)}(s=Reflect.metadata("design:type",Function)(s=Reflect.metadata("design:paramtypes",[void 0===u.IDatabaseStateStorage?Object:u.IDatabaseStateStorage])(s=class{constructor(t){this.databaseStateStorage=t,this._userId=null,this.states=null,this.getAdapterTypeOfSharedDatabases=n()(this.getAdapterTypeOfSharedDatabases.bind(this)),this.getAdapterTypeOfUserScopedDatabases=n()(this.getAdapterTypeOfUserScopedDatabases.bind(this))}reset(){this.states=null,this.getAdapterTypeOfSharedDatabases=n()(this.getAdapterTypeOfSharedDatabases.bind(this)),this.getAdapterTypeOfUserScopedDatabases=n()(this.getAdapterTypeOfUserScopedDatabases.bind(this))}async getStates(){if(null!==this.states)return this.states;try{let t=await this.databaseStateStorage.getObjectAsync(c.a);null===t&&(t=Object(h.a)(),await this.databaseStateStorage.setObjectAsync(c.a,t)),this.states=t}catch(t){throw new Error("Invalid adapter type states")}return this.states}async saveStates(t){this.states=t,await this.databaseStateStorage.setObjectAsync(c.a,t)}async getAdapterTypeOfSharedDatabases(){const t=await this.getStates();let e=!1;return void 0===t.shared&&(t.shared=c.b,e=!0),e&&await this.saveStates(t),t.shared}async setAdapterTypeOfSharedDatabases(t){const e=await this.getStates();let a=!1;e.shared!==t&&(e.shared=t,a=!0),await this.migrateFullDone()&&e.shared===d.a.IDB&&(e.shared=d.a.SQLite,a=!0),a&&await this.saveStates(e)}async getAdapterTypeOfUserScopedDatabases(t){const e=await this.getStates();let a=!1;return void 0===e[t]&&(e[t]=c.b,a=!0),await this.migrateFullDone()&&e[t]===d.a.IDB&&(e[t]=d.a.SQLite,a=!0),a&&await this.saveStates(e),e[t]}async migrateFullDone(){return $zFeatures.migrateDB.isMigrateFullDone()}async setAdapterTypeOfUserScopedDatabases(t,e){const a=await this.getStates();let s=!1;a[t]!==e&&(a[t]=e,s=!0),s&&await this.saveStates(a)}async getInUseAdaperTypes(){const t=await this.getStates(),e=[];if(void 0!==t.shared){const a=t.shared;e.push(a)}if(null!==this._userId&&void 0!==t[this._userId]){const a=t[this._userId];e.includes(a)||e.push(a)}return e}init(t){this._userId=t,this.reset()}})||s)||s)||s)||s;i.ModuleContainer.registerSingleton(o.a,p)}}]);
//# sourceMappingURL=../sourcemaps/lazy/default-login-main-startup-shared-worker.03d9c4cb35695e444f6e.js.map