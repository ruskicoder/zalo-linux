/**
 * Deobfuscated from: zadark-zconv.min.js
 * Generated: 2025-10-05T13:04:48.688Z
 * 
 * This file has been automatically beautified from minified source.
 * Variable names are preserved from the original obfuscated code.
 * Manual analysis and renaming may be needed for better readability.
 */

! function() {
  function t(t) {
    t !== document.body.getAttribute("data-current-conv-id") && (t ? document.body.setAttribute("data-current-conv-id", t) : document.body.removeAttribute("data-current-conv-id"), document.dispatchEvent(new CustomEvent("@ZaDark:CONV_ID_CHANGE")))
  }
  const n = document.getElementById("conversationListId");
  n && n.addEventListener("click", function(e) {
    const c = e.target.closest(".msg-item");
    if (!c || !n.contains(c)) return;
    const o = c.querySelector(".conv-item-title__more");
    o && (o === e.target || o.contains(e.target)) || t(function(t) {
      if (!t) return null;
      const n = t[Object.keys(t).find(t => t.startsWith("__reactInternalInstance"))];
      return n ? n.key : null
    }(c))
  });
  const e = document.body.classList.contains("zadark-pc"),
    c = ((t, n) => {
      let e;
      return () => {
        clearTimeout(e), e = setTimeout(t, n)
      }
    })(function() {
      const n = document.querySelector("#container > main");
      if (!n) return;
      const e = n[Object.keys(n).find(t => t.startsWith("__reactInternalInstance"))];
      if (!e) return null;
      const {
        convId: c
      } = e.return.pendingProps;
      t(c)
    }, 200);
  e ? window.$zwindow.onVisibilityChange(c) : window.addEventListener("focus", c)
}();
